@model AmeCaseBookOrg.Models.DataItemViewModel

@{
    Layout = "~/Views/Shared/_LayoutJQGrid.cshtml";
    ViewBag.Title = "Edit Topic";
}

<div id="sub_tit">
    <ul>
        <li>Edit Topic</li>

    </ul>

</div>
@Scripts.Render("~/bundles/tinymce")
<script type="text/javascript">
    tinyMCE.baseURL = "@Url.Content("~/Scripts/tinymce")";
    tinyMCE.init({
        selector: "textarea",
        theme: "modern",
        height:300,
        plugins: [
            "advlist autolink lists link image charmap print preview hr anchor pagebreak",
            "searchreplace wordcount visualblocks visualchars code fullscreen",
            "insertdatetime media nonbreaking save table contextmenu directionality",
            "emoticons template paste textcolor colorpicker textpattern imagetools"
        ],
        toolbar1: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
        toolbar2: "print preview media | forecolor backcolor emoticons",
        image_advtab: true,
        templates: [
            { title: 'Test template 1', content: 'Test 1' },
            { title: 'Test template 2', content: 'Test 2' }
        ]
    });
</script>
@if (Request.IsAuthenticated && User.IsInRole("Admin"))
{
    <div class="navi">
        @Html.ActionLink("Home", "Index", "Home") > @Html.ActionLink("Admin", "Index", "Admin")  > @Html.ActionLink("Data Management", "Index", "DataManagement") > <span>Edit Topic</span>
    </div>
}
else
{
    <div class="navi">
        @Html.ActionLink("Home", "Index", "Home") > @Html.ActionLink("Search", "Index", "DataManagement") > <span>Edit Topic</span>
    </div>
}
<script>
    function deleteItem(e, itemId) {
        e.preventDefault();
        var r = confirm("Are you sure you want to delete?");
        if (r == true) {
            $.ajax({ url: "/DataManagement/Delete", data: {id : itemId}, method: "POST" }).done(function (data) {
                if (data.status != 200 || data=="") {
                    alert("You don't have permission to perform this action");
                    return;
                } else {
                    window.location.href = "/DataManagement/Index";
                }
            }).fail(function (data) {
                alert("Cannot delete this topic");
            });
        }
    }
</script>
<div id="contents">
    @using (Html.BeginForm("Edit", "DataManagement", FormMethod.Post, new { enctype = "multipart/form-data", id = "editForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.ID)
        <div class="datail_v">
            <label>
                <a href="javascript:$('#editForm').submit()" class="bt_blue_t"> <i class="fa fa-pencil-square-o"> </i> Save </a>
                <a href="#" onclick="deleteItem(event, @Model.ID )" class="bt_blue_t"> <i class="fa fa-list"></i> Delete </a>
                <a href="~/DataManagement/View?id=@Model.ID" class="bt_blue_t"> <i class="fa fa-list"></i> Cancel </a>
            </label>
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <div class="myinfo_add_ta">
                <table>
                    <tr>
                        <th><i class="fa fa-chevron-circle-right"> </i> Category</th>
                        <td colspan="3">
                            @Html.DropDownList("SubCategoryID", null, htmlAttributes: new { @class = "input_green bold", @style = "width:300px;" })
                            @Html.ValidationMessageFor(model => model.SubCategoryID, "", new { @class = "text-danger" })
                        </td>

                    </tr>
                    <tr>
                        <th><i class="fa fa-chevron-circle-right"> </i> Country</th>
                        <td colspan="3">
                            @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "input_green bold", @style = "width:300px;" })
                            @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                        </td>

                    </tr>
                    <tr>
                        <th><i class="fa fa-chevron-circle-right"> </i> Title</th>
                        <td colspan="3">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "re_input", @style = "width:300px;text-align:left;padding-left:10px;" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </td>

                    </tr>
                    <tr>
                        <td colspan="2" style="padding-left:0px">
                            @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @style = "width:100% ; height:500px" } })
                        </td>
                    </tr>
                    <tr>
                        <th><i class="fa fa-chevron-circle-right"> </i> Main Image</th>
                        <td>
                            @if(Model.Images!=null)
                            {
                                foreach (var file in Model.Images)
                                {
                                    <input name="mainImageIds[]" type="hidden" value="@file.FileId" />
                                    <br />
                                    <a href="~/File?id=@file.FileId"> @file.FileName</a>
                                }
                            }
                          
                            @Html.Partial("UploadFile", new ViewDataDictionary { { "multiple", false }, { "uploadId", "fileuploadmainImage" }, { "fileResultIds", "mainImageIds[]" }, { "filesContainerId", "filesContainerId1" }, { "acceptFileTypes", "image" } })
                            
                        </td>

                    </tr>
                    <tr>
                        <th><i class="fa fa-chevron-circle-right"> </i> Attached files</th>
                        <td>
                            @if (Model.AttachFiles != null)
                            {
                                foreach (var file in Model.AttachFiles)
                                {
                                    <input name="attachFileIds[]" type="hidden" value="@file.FileId" />
                                    <br />
                                    <a href="~/File?id=@file.FileId"> @file.FileName</a>
                                }
                            }
                            @Html.Partial("UploadFile", new ViewDataDictionary { { "multiple", true }, { "uploadId", "fileuploadAttachFile" }, { "fileResultIds", "attachFileIds[]" }, { "filesContainerId", "filesContainerId2" } })
                           
                        </td>

                    </tr>
                </table>
            </div>
        </div>
    }
</div>
